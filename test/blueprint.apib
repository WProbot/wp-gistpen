FORMAT: 1A
HOST: http://intraxiadev.ngrok.io/wp-json/intraxia/v1/gistpen

# WP-Gistpen

The WP-Gistpen API is built into the WP-API for client-side Gistpen manipulation.

## User Collection [/me]

### List User Settings [GET]

You can retrieve the user's current settings with this endpoint. It returns an object with key:value pairs with all of the user's settings.

+ Response 200 (application/json)

        {
            "ace_theme": "ambiance"
        }

### Update User Settings [PATCH]

You can update a user's settings with this endpoint. It also returns an object with the user's settings, in addition to an error array for any keys that weren't updated.

+ Request (application/json)

        {
            "ace_theme": "chaos",
            "unknown_key": "random-value"
        }

+ Response 201 (application/json)

    + Header

            X-Invalid-Keys: random-value

    + Body

            {
                "ace_theme": "chaos"
            }

## Jobs Collection [/jobs]

The Jobs Collection endpoints provides client access to the jobs system.

### List Jobs [GET]

Retrieve a list of all the registered jobs.

+ Response 200 (application/json)

        [
            {
                "name": "export",
                "url": "full-url/jobs/export"
            }
        ]

## Jobs Resource [/jobs/{job_name}]

The Jobs Resource endpoints provide a way for clients to start and retrieve data on past runs, as well as forming an integral part of the system itself.

+ Parameters
    + job_name (string) - Job name registered with the jobs system

### Get Job Status [GET]

Retrieves the last status as well as recent run history.

+ Response 200 (application/json)

        {
            "latest": {
                "status": "passed",
                "url": "/jobs/export/12345"
            },
            "history": [
                {
                    "status": "passed",
                    "url": "/jobs/export/12345"
                }
            ]
        }

### Start New Job [POST]

Kicks off a new background task for the registered job.

+ Response 202 (application/json)

        {
            "status": "created",
            "url": "/jobs_exports/12345"
        }

## Task Resource [/jobs/{job_name}/{task_timestamp}]

The Task resource provides status and console information for running background tasks.

+ Parameters
    + job_name (string) - Job name registered with the jobs system
    + task_timestamp (number) - Timestamp for the task was created

### Get Task Status [GET]

+ Response 200 (application/json)

        {
            "status": "running",
            "console": "/jobs/export/12345/console"
        }

## Task Console [/jobs/{jobs_name}/{task_timestamp}/console]

The Task console provides a stream of helpful information from the running task.

+ Paramters
    + o (number) - Console offset, starts at 0
        + Default: "0"

Use the provided "next" key to make subsequent calls to the console API.

+ Response 200 (application/json)

    {
        "messages": [
            {
                "text": "This is a message",
                "level": "debug",
                "timestamp": "2016-01-00T00:00:00+00:00Z"
            }
        ],
        "next": "/jobs/exports/12345/console?o=1"
    }
